- name: Install Docker dependencies
  apt:
    pkg: 
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg
    - software-properties-common
    - lsb-release
    state: present
    update_cache: yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Add Dockerâ€™s official GPG key
  apt_key:
    url: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg
    state: present
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Add Docker repository to apt
  apt_repository:
    repo: deb https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable
    state: present
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Install Docker
  apt:
    pkg:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - docker-compose
    state: latest
    update_cache: yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Activate Docker service and start it
  service:
    name: docker
    state: started
    enabled: yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Create docker cleanup cron job on 04:00
  ansible.builtin.cron:
    name: docker-prune
    weekday: "0"
    hour: "4"
    minute: "0"
    user: root
    job: "docker system prune -af"
    cron_file: docker-prune

- name: Enable IPV6 if condition is true
  include_tasks: "ipv6.yml"
  when: ipv6_enabled
